{"ast":null,"code":"var _jsxFileName = \"/Users/grzegorz/Desktop/Projects/react-router-quotes-app/src/pages/AllQuotes.js\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Greg\",\n  text: \"Learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Max\",\n  text: \"Learning React is great!\"\n}, {\n  id: \"q3\",\n  author: \"Alicia\",\n  text: \"Learning React is good!\"\n}];\nconst AllQuotes = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All Quotes Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \"useHttp(getAllQuotes, true);\", /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: DUMMY_QUOTES\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["QuoteList","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","props"],"sources":["/Users/grzegorz/Desktop/Projects/react-router-quotes-app/src/pages/AllQuotes.js"],"sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst DUMMY_QUOTES = [\n  {\n    id: \"q1\",\n    author: \"Greg\",\n    text: \"Learning React is fun!\",\n  },\n  {\n    id: \"q2\",\n    author: \"Max\",\n    text: \"Learning React is great!\",\n  },\n  {\n    id: \"q3\",\n    author: \"Alicia\",\n    text: \"Learning React is good!\",\n  },\n];\n\nconst AllQuotes = (props) => {\n  return (\n    <>\n      <h1>All Quotes Page</h1>\n      useHttp(getAllQuotes, true);\n      <QuoteList quotes={DUMMY_QUOTES} />\n    </>\n  );\n};\n\nexport default AllQuotes;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,gCAAgC;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,YAAY,QAAQ,YAAY;AAAC;AAAA;AAE1C,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,IAAI;EACRC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE;AACR,CAAC,CACF;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAC3B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAwB,+CAExB,QAAC,SAAS;MAAC,MAAM,EAAEL;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBAClC;AAEP,CAAC;AAAC,KARII,SAAS;AAUf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}